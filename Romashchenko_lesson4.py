# Все задачи текущего блока решите с помощью генераторов списков!

# Задание-1: (СДЕЛАНО)
# Дан список, заполненный произвольными целыми числами.
# Получить новый список, элементы которого будут
# квадратами элементов исходного списка
# [1, 2, 4, 0] --> [1, 4, 16, 0]

# import random
# l = [x ** 2 for x in range(-30,30,random.randint(1,5))]
# print(l)

# Задание-2: (СДЕЛАНО)
# Даны два списка фруктов.
# Получить список фруктов, присутствующих в обоих исходных списках.

# import random
# a = ['яблоко', 'апельсин','банан','киви','манго', 'абрикос']
# b = ['дыня', 'арбуз','абрикос','гранат','апельсин', 'манго']
# print(a.count('яблоко'))
# c = [x for x in a if x in b]
# print(c)




# Задание-3: (СДЕЛАНО)
# Дан список, заполненный произвольными числами.
# Получить список из элементов исходного, удовлетворяющих следующим условиям:
# + Элемент кратен 3
# + Элемент положительный
# + Элемент не кратен 4

# import random
# a = int(random.randint(-100, 0))
# print(a)
# b = int(random.randint(0, 100))
# print(b)
# c = int(random.randint(1,3))
# l = [x for x in range(a, b, c) if (x % 3 == 0) and (x > 0) and (x % 4 != 0)]
# print(l)


# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1 (СДЕЛАНО)
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь заглавные первые буквы.
# email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре, допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net), te_4_st@test.com - верно указан.

# import re
# name = input('Введите имя')
# lastname = input('Введите фамилию')
# pattern = '[a-z_0-9.]+@[a-z_0-9-]+\.(ru|com|org|pro)'
# while (name.istitle() and lastname.istitle()) is False:
#     print("Нужно ввести имя и фамилию с заглавной буквы")
#     name = input('Введите имя')
#     lastname = input('Введите фамилию')
# else:
#     pass
# email = input('Введите email')
# if re.match(pattern, email) is not None:
#     print("Email = okay")
# else:
#     print("Email is not good enough")



# # Задача - 2: (СДЕЛАНО)
# # Вам дан текст:

# import re
# some_str = '''
# Мороз и солнце; день чудесный!
# Еще ты дремлешь, друг прелестный —
# Пора, красавица, проснись:
# Открой сомкнуты негой взоры
# Навстречу северной Авроры,
# Звездою севера явись!
# Вечор, ты помнишь, вьюга злилась,
# На мутном небе мгла носилась;
# Луна, как бледное пятно,
# Сквозь тучи мрачные желтела,
# И ты печальная сидела —
# А нынче... погляди в окно:
# Под голубыми небесами
# Великолепными коврами,
# Блестя на солнце, снег лежит;
# Прозрачный лес один чернеет,
# И ель сквозь иней зеленеет,
# И речка подо льдом блестит.
# Вся комната янтарным блеском
# Озарена. Веселым треском
# Трещит затопленная печь.
# Приятно думать у лежанки.
# Но знаешь: не велеть ли в санки
# Кобылку бурую запречь?
# Скользя по утреннему снегу,
# Друг милый, предадимся бегу
# Нетерпеливого коня
# И навестим поля пустые,
# Леса, недавно столь густые,
# И берег, милый для меня.'''
# #
# # # Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# # # более одной точки, при любом исходе сообщите результат пользователю!
# pattern = '\.\.'
# if re.search(pattern, some_str) is None:
#     print('В тексте нет более одной точки подряд')
# else:
#     print('В тексте есть более одной точки подряд')